name: Production release pipeline

on:
  workflow_dispatch:
    inputs:
      release_as:
        description: 'release as'
        required: true
      custom_version:
        description: 'custom version'
        required: false

jobs:
  publish:
    runs-on: ubuntu-latest

    env:
      NPM_FONT_AWESOME_TOKEN: ${{ secrets.NPM_FONT_AWESOME_TOKEN }}

    steps:
      - name: git checkout
        uses: actions/checkout@v3

      - name: configure committer
        run: |
          git config user.name "bmo-amity-bot"
          git config user.email "developers@amity.co"

      - uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: increase version (patch)
        run: pnpm standard-version --yes --release-as patch
        if: github.event.inputs.release_as == 'patch'

      - name: increase version (minor)
        run: pnpm standard-version --yes --release-as minor
        if: github.event.inputs.release_as == 'minor' && github.event.inputs.pre-release == ''

      - name: increase version (minor) (pre-release)
        run: pnpm standard-version --yes --prerelease ${{ github.event.inputs.pre-release }}
        if: github.event.inputs.release_as == 'minor' && github.event.inputs.pre-release != ''

      - name: increase version (major)
        run: pnpm standard-version --yes --release-as major
        if: github.event.inputs.release_as == 'major' && github.event.inputs.pre-release == ''

      - name: increase version (major) (pre-release)
        run: pnpm standard-version --yes --release-as major --prerelease ${{ github.event.inputs.pre-release }}
        if: github.event.inputs.release_as == 'major' && github.event.inputs.pre-release != ''

      - name: increase version (pre-release)
        run: pnpm standard-version --prerelease ${{ github.event.inputs.pre-release }}
        if: github.event.inputs.release_as == '' && github.event.inputs.pre-release != ''

      - name: increase version (custom)
        run: pnpm standard-version --yes --release-as ${{ github.event.inputs.custom_version }}
        if: github.event.inputs.release_as == 'custom'

      - name: build
        run: pnpm run build

      - name: publish on npm
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}
          access: public

      - name: push version
        run: git push --follow-tags
